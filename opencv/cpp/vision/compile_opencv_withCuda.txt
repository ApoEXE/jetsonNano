cmake -D CMAKE_BUILD_TYPE=RELEASE \
            -D CMAKE_INSTALL_PREFIX=/usr/local \
            -D INSTALL_C_EXAMPLES=ON \
            -D INSTALL_PYTHON_EXAMPLES=ON \
            -D WITH_TBB=ON \
            -D WITH_V4L=ON \
            -D WITH_QT=ON \
            -D WITH_OPENGL=ON \
            -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
            -D WITH_CUDA=ON \
            -D ENABLE_FAST_MATH=1 \
            -D CUDA_FAST_MATH=1 \
            -D WITH_CUBLAS=1 \
            -D OPENCV_GENERATE_PKGCONFIG=ON \
	    -D OPENCV_PC_FILE_NAME=opencv.pc \
            -D OPENCV_ENABLE_NONFREE=ON \
            -D WITH_CUDNN=ON \
            -D OPENCV_DNN_CUDA=ON \
            -D CUDA_ARCH_BIN=7.5 \
            -D WITH_NVCUVID=ON \
            -D WITH_OPENGL=ON \
            -D WITH_OPENMP=ON \
            -D WITH_IPP=ON \
            -D WITH_CSTRIPES=ON \
            -D WITH_OPENCL=ON \
            -D CUDA_NVCC_FLAGS="-D_FORCE_INLINES" \
            -D CMAKE_CXX_FLAGS=-isystem\ /opt/nvidia-video-codec/include \
            -D BUILD_EXAMPLES=ON ..
$ nproc
$ make -j8
$ sudo make install
Include the libs in your environment

$ sudo /bin/bash -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
$ sudo ldconfig



nvidia headers ffm
git clone https://git.videolan.org/git/ffmpeg/nv-codec-headers.git
cd nv-codec-headers
make
sudo make install
mv to opt, include ub opencv make file

ffmpeg with cuda
PKG_CONFIG_PATH="/usr/local/lib/pkgconfig" ./configure
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:${PKG_CONFIG_PATH}

ffmpeg
./configure --enable-cuda --enable-nvenc --enable-cuvid --enable-nonfree --extra-cflags="-I/usr/local/cuda/include -I/home/damien/code/lib/Video_Codec_SDK_8.1.24/Samples/NvCodec/NvEncoder" --extra-ldflags=-L/usr/local/cuda/lib64 --enable-shared --disable-static


correct way to compile
g++ test.cpp -o test `pkg-config opencv --cflags --libs` 